package ChatUDP.cliente;

import ChatUDP.model.User;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Address;
import javax.mail.Flags;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;

public class ResponderEmail extends javax.swing.JFrame {

    private Message mensagem;
    private MailApp mailApp;
    private TelaCliente telaCliente;
    private File file;
    private String userName;

    public ResponderEmail(Message mensagem, MailApp mail, TelaCliente e) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.mailApp = mail;
        this.telaCliente = e;
        this.mensagem = mensagem;

        this.initTela();
    }

    private void initTela() {
        try {
            txtAssunto.setText(mensagem.getSubject());
            if (mensagem.getSentDate() != null) {
                txtData.setText(converteData(mensagem.getSentDate()));
            }

            txtConteudo.setText(mailApp.processMessageBody(mensagem));
            Address[] f = mensagem.getFrom();
            txtDe.setText(f[0].toString());
            cTipoResposta.addItemListener(new ItemListener() {
                public void itemStateChanged(ItemEvent arg0) {
                    lerArquivo();
                }
            });

            cTipoResposta.removeAllItems();
            cTipoResposta.addItem("Escolha um modelo...");

            this.file = new File("src/ChatUDP/respostas/");

            File[] arqs = this.file.listFiles();
            for (File a : arqs) {
                cTipoResposta.addItem(a.getName());
            }
        } catch (MessagingException ex) {
            Logger.getLogger(ResponderEmail.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void lerArquivo() {
        int r = cTipoResposta.getSelectedIndex();
        if (r != -1) {
            if (r == 0) {
                txtResposta.setText("");
            } else {
                try {
                    BufferedReader br = new BufferedReader(
                            new FileReader("src/ChatUDP/respostas/" + cTipoResposta.getItemAt(r)));
                    StringBuilder sb = new StringBuilder();
                    String line = br.readLine();

                    while (line != null) {
                        sb.append(line);
                        sb.append(System.lineSeparator());
                        line = br.readLine();
                    }
                    txtResposta.setText(sb.toString());
                    br.close();
                } catch (Exception ex) {
                    Logger.getLogger(ResponderEmail.class.getName()).log(Level.SEVERE, null, ex);
                    ex.printStackTrace();
                }
            }
        }
    }

    private String converteData(Date data) {
        return new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(data);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelDe = new javax.swing.JLabel();
        jLabelAssunto = new javax.swing.JLabel();
        jLabelData = new javax.swing.JLabel();
        txtDe = new javax.swing.JTextField();
        txtData = new javax.swing.JTextField();
        txtAssunto = new javax.swing.JTextField();
        jLabelResposta = new javax.swing.JLabel();
        jScrollPaneResposta = new javax.swing.JScrollPane();
        txtResposta = new javax.swing.JTextArea();
        cTipoResposta = new javax.swing.JComboBox<>();
        btnResponder = new javax.swing.JButton();
        jLabelConteudo = new javax.swing.JLabel();
        jScrollPaneConteudo = new javax.swing.JScrollPane();
        txtConteudo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Responder E-mail");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabelDe.setText("De:");

        jLabelAssunto.setText("Assunto:");

        jLabelData.setText("Data:");

        txtDe.setEditable(false);

        txtData.setEditable(false);

        txtAssunto.setEditable(false);

        jLabelResposta.setText("Resposta:");

        txtResposta.setColumns(20);
        txtResposta.setRows(5);
        jScrollPaneResposta.setViewportView(txtResposta);

        cTipoResposta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teste", " " }));

        btnResponder.setText("Responder");
        btnResponder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResponderActionPerformed(evt);
            }
        });

        jLabelConteudo.setText("Conte√∫do:");

        txtConteudo.setEditable(false);
        txtConteudo.setColumns(20);
        txtConteudo.setRows(5);
        jScrollPaneConteudo.setViewportView(txtConteudo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnResponder))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelDe)
                                    .addComponent(jLabelAssunto)
                                    .addComponent(jLabelConteudo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDe)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelData)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtAssunto)
                                    .addComponent(jScrollPaneConteudo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabelResposta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPaneResposta)
                                    .addComponent(cTipoResposta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDe)
                    .addComponent(jLabelData)
                    .addComponent(txtDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAssunto)
                    .addComponent(txtAssunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelConteudo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPaneConteudo, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelResposta)
                    .addComponent(cTipoResposta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneResposta, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnResponder)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResponderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResponderActionPerformed
        if (txtResposta.getText().trim().equals("") || txtResposta.getText() == null) {
            JOptionPane.showMessageDialog(this, "Mesagem vazia!", "Aten√ß√£o", 
                    JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                mailApp.responderEmail(mensagem, txtResposta.getText().trim());
                JOptionPane.showMessageDialog(this, "E-mail enviado com sucesso!", 
                        "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                
                this.telaCliente.sendMessage(
                        "6#"
                        + this.txtDe.getText()
                        + "#"
                        + this.txtAssunto.getText());
                
                this.telaCliente.atualizar();
                this.telaCliente.setResponderEmail(false);
                //enviar uma mensagem para o servidor para acrescentar um email respondido

                this.dispose();
            } catch (Exception ex) {
                ex.printStackTrace();
                this.telaCliente.setResponderEmail(true);
                JOptionPane.showMessageDialog(this, "Erro ao enviar o e-mail!", "Aten√ß√£o", 
                        JOptionPane.WARNING_MESSAGE);

                try {
                    mensagem.setFlag(Flags.Flag.ANSWERED, false);
                } catch (MessagingException ex1) {
                    System.out.println("erro");
                }
            }
        }
    }//GEN-LAST:event_btnResponderActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        telaCliente.setResponderEmail(false);
    }//GEN-LAST:event_formWindowClosing

    public void setUserName(String userName) {
        this.userName = userName;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResponder;
    private javax.swing.JComboBox<String> cTipoResposta;
    private javax.swing.JLabel jLabelAssunto;
    private javax.swing.JLabel jLabelConteudo;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelDe;
    private javax.swing.JLabel jLabelResposta;
    private javax.swing.JScrollPane jScrollPaneConteudo;
    private javax.swing.JScrollPane jScrollPaneResposta;
    private javax.swing.JTextField txtAssunto;
    private javax.swing.JTextArea txtConteudo;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtDe;
    private javax.swing.JTextArea txtResposta;
    // End of variables declaration//GEN-END:variables
}
